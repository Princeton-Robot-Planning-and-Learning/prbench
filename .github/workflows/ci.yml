name: CI Checks

on: [push]

jobs:
  # Generate docs first, then run CI.
  generate-docs:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.11"]
    steps:
    - name: Install LAPACK and BLAS
      run: |
        sudo apt-get update
        sudo apt-get install -y liblapack-dev libblas-dev
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.event.pull_request.head.repo.full_name }}
        ref: ${{ github.event.pull_request.head.ref }}
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}    
    - name: Install the project
      run: uv sync --all-extras --dev
    - name: Generate environment documentation
      run: uv run python scripts/generate_env_docs.py
    - name: Commit and push
      run: |
        git config user.name github-actions
        git config user.email github-actions@github.com
        git add docs
        git commit --amend --no-edit
        git push --force
  autoformat:
    needs: generate-docs  # need to make sure this passes after the last commit
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Run black to test code linting
        uses: psf/black@stable
        with:
          options: "--check --verbose"
          jupyter: true
      - name: Run isort to organize imports
        uses: isort/isort-action@master
  linting:
    needs: generate-docs  # need to make sure this passes after the last commit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}    
    - name: Install the project
      run: uv sync --all-extras --dev
    - name: Lint
      run: |
        uv run pytest . --pylint -m pylint --pylint-rcfile=.pylintrc
  static-type-checking:
    needs: generate-docs  # need to make sure this passes after the last commit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10", "3.11", "3.12"]
    steps:
    - uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}
    - name: Install the project
      run: uv sync --all-extras --dev
    - name: Mypy
      run: |
        uv run mypy .
  unit-tests:
    needs: generate-docs  # need to make sure this passes after the last commit
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
    - name: Install LAPACK and BLAS
      run: |
        sudo apt-get update
        sudo apt-get install -y liblapack-dev libblas-dev
    - uses: actions/checkout@v4
    - name: Install uv
      uses: astral-sh/setup-uv@v3
      with:
        enable-cache: true
        cache-dependency-glob: "pyproject.toml"
    - name: Set up Python ${{ matrix.python-version }}
      run: uv python install ${{ matrix.python-version }}    
    - name: Install the project
      run: uv sync --all-extras --dev
    - name: Pytest
      run: |
       uv run pytest tests/
